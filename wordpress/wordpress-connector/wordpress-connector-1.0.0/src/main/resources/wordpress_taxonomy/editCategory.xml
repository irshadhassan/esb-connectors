<?xml version="1.0" encoding="UTF-8"?>
<template xmlns="http://ws.apache.org/ns/synapse" name="editCategory">

    <!--Mandatory Parameter-->
    <parameter name="category" description="The category slug to edit"/>
    <parameter name="name" description="The category new name"/>

    <!--Optional Body Parameters-->
    <parameter name="description" description="The category new description"/>
    <parameter name="parent" description="ID of the new parent category"/>

    <!--optional Query parameters-->
    <parameter name="http_envelope" description="Set HTTP status code to always be 200. The JSON response is wrapped in an 'envelope' containing the 'real' HTTP status code and headers.default(false)"/>
    <parameter name="pretty" description="if true Output pretty JSON.default(false)"/>
    <parameter name="meta" description="Loads data from the endpoints found in the 'meta' part of the response"/>
    <parameter name="fields" description="Return only the specified fields"/>

    <sequence>
        <!--Mandatory Parameter-->
        <property name="uri.var.category" expression="$func:category" />
        <property name="uri.var.name" expression="$func:name" />

        <!--Optional body Parameters-->
        <property name="uri.var.description" expression="$func:description" />

        <!--Optional body parameter with type integer -->
        <filter source="boolean($func:parent)" regex="true">
            <then>
                <property name="uri.var.parent" expression="$func:parent" type="INTEGER" />
            </then>
        </filter>

        <!-- Building the URL with the query parameters -->
        <property name="uri.var.http_envelope" expression="$func:http_envelope"/>
        <property name="uri.var.pretty" expression="$func:pretty" />
        <property name="uri.var.meta" expression="$func:meta" />
        <property name="uri.var.fields" expression="$func:fields" />

        <filter
                xpath="(not(get-property('uri.var.http_envelope') = '' or (not(boolean(get-property('uri.var.http_envelope'))))))">
            <then>
                <property name="uri.var.queryParameters"
                          expression="fn:concat(get-property('uri.var.queryParameters'),'http_envelope=',get-property('uri.var.http_envelope'),'&amp;')" />
            </then>
        </filter>

        <filter
                xpath="(not(get-property('uri.var.pretty') = '' or (not(boolean(get-property('uri.var.pretty'))))))">
            <then>
                <property name="uri.var.queryParameters"
                          expression="fn:concat(get-property('uri.var.queryParameters'),'pretty=',get-property('uri.var.pretty'),'&amp;')" />
            </then>
        </filter>

        <filter
                xpath="(not(get-property('uri.var.meta') = '' or (not(string(get-property('uri.var.meta'))))))">
            <then>
                <property name="uri.var.queryParameters"
                          expression="fn:concat(get-property('uri.var.queryParameters'),'meta=',get-property('uri.var.meta'),'&amp;')" />
            </then>
        </filter>

        <filter
                xpath="(not(get-property('uri.var.fields') = '' or (not(string(get-property('uri.var.fields'))))))">
            <then>
                <property name="uri.var.queryParameters"
                          expression="fn:concat(get-property('uri.var.queryParameters'),'fields=',get-property('uri.var.fields'),'&amp;')" />
            </then>
        </filter>

        <property name="uri.var.wp_resource_uri" expression="fn:concat('https://public-api.wordpress.com/rest/v1/sites/',get-property('uri.var.wp_site_domain'),'/categories/slug:',get-property('uri.var.name'))" scope="default" type="STRING"/>

        <!-- Building request with mandatory params -->
        <payloadFactory media-type="json">
            <format>
                {
                "name": "$1"
                }
            </format>
            <args>
                <arg expression="get-property('uri.var.name')" />
            </args>
        </payloadFactory>

        <script language="js"><![CDATA[

			var description=mc.getProperty('uri.var.description');
			var parent=mc.getProperty('uri.var.parent');

			payload = mc.getPayloadJSON();

			if(description != null && description != ""){

				payload.description=description;

			}

			if(parent != null && parent != ""){

				payload.parent=parent;

			}




           mc.setPayloadJSON(payload);
         ]]></script>

        <property name="messageType" scope="axis2" value="application/x-www-form-urlencoded" />

        <property name="uri.var.wp_resource_uri" expression="fn:concat('https://public-api.wordpress.com/rest/v1/sites/',get-property('uri.var.wp_site_domain'),'/categories/slug:',get-property('uri.var.category'))" />

        <call>
            <endpoint>
                <http method="POST" uri-template="{uri.var.wp_resource_uri}?{uri.var.queryParameters}" />
            </endpoint>
        </call>

        <!-- Remove response's custom header information -->
        <header name="X-Prefork" scope="transport" action="remove" />
        <header name="X-hacker" scope="transport" action="remove" />

    </sequence>
</template>
